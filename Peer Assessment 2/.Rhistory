getwd()
stormData <- read.csv(bzfile("StormData.csv.bz2"))
stormData <- read.csv(bzfile("StormData.csv.bz2"))
summary(stormData)
str(stormData)
NOAAData = stormData
lm()
rm(stormData)
View(NOAAData)
library(dplyr)
#Load dplyr, ggplot2 and gridExtra
library(dplyr)
library(ggplot2)
library(gridExtra)
#Summarize fatalies by events
fatalities <- NOAAData %>%
group_by(EVTYPE) %>%
summarise(count = sum(FATALITIES)) %>%
arrange(desc(count))
fatalities <- fatalities[1:10, ]
#Summarize injuries by events
injuries <- NOAAData %>%
group_by(EVTYPE) %>%
summarise(count = sum(INJURIES)) %>%
arrange(desc(count))
injuries <- injuries[1:10, ]
# Set exponential variables to zero
variableProcessing <- vector(mode = "numeric", length = dim(NOAAData)[1])
# Pattern check and value assignment
variableProcessing[NOAAData$PROPDMGEXP == "1"] <- 1
variableProcessing[NOAAData$PROPDMGEXP == "H" | NOAAData$PROPDMGEXP == "h" | NOAAData$PROPDMGEXP == "2"] <- 2
variableProcessing[NOAAData$PROPDMGEXP == "K" | NOAAData$PROPDMGEXP == "k" | NOAAData$PROPDMGEXP == "3"] <- 3
variableProcessing[NOAAData$PROPDMGEXP == "4"] <- 4
variableProcessing[NOAAData$PROPDMGEXP == "5"] <- 5
variableProcessing[NOAAData$PROPDMGEXP == "M" | NOAAData$PROPDMGEXP == "m" | NOAAData$PROPDMGEXP == "6"] <- 6
variableProcessing[NOAAData$PROPDMGEXP == "7"] <- 7
variableProcessing[NOAAData$PROPDMGEXP == "8"] <- 8
variableProcessing[NOAAData$PROPDMGEXP == "B" | NOAAData$PROPDMGEXP == "b"] <- 9
NOAAData <- NOAAData %>%
mutate(COST.PROP.DAMAGE = PROPDMG * 10 ^ variableProcessing)
# Set exponential variables to zero
variableProcessing <- vector(mode = "numeric", length = dim(NOAAData)[1])
# Pattern check and value assignment
variableProcessing[NOAAData$CROPDMGEXP == "1"] <- 1
variableProcessing[NOAAData$CROPDMGEXP == "H" | NOAAData$CROPDMGEXP == "h" | NOAAData$CROPDMGEXP == "2"] <- 2
variableProcessing[NOAAData$CROPDMGEXP == "K" | NOAAData$CROPDMGEXP == "k" | NOAAData$CROPDMGEXP == "3"] <- 3
variableProcessing[NOAAData$CROPDMGEXP == "4"] <- 4
variableProcessing[NOAAData$CROPDMGEXP == "5"] <- 5
variableProcessing[NOAAData$CROPDMGEXP == "M" | NOAAData$CROPDMGEXP == "m" | NOAAData$CROPDMGEXP == "6"] <- 6
variableProcessing[NOAAData$CROPDMGEXP == "7"] <- 7
variableProcessing[NOAAData$CROPDMGEXP == "8"] <- 8
variableProcessing[NOAAData$CROPDMGEXP == "B" | NOAAData$CROPDMGEXP == "b"] <- 9
NOAAData <- NOAAData %>%
mutate(COST.CROP.DAMAGE = CROPDMG * 10 ^ variableProcessing)
costPropDamage <- NOAAData %>%
count(EVTYPE, wt = COST.PROP.DAMAGE, sort = TRUE) %>%
slice(1:10) %>%
mutate(n = n / 1e9)
names(costPropDamage) <- c("EVTYPE", "Cost")
costCropDamage <- NOAAData %>%
count(EVTYPE, wt = COST.CROP.DAMAGE, sort = TRUE) %>%
slice(1:10) %>%
mutate(n = n / 1e9)
names(costCropDamage) <- c("EVTYPE", "Cost")
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
fatalitiesHist
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
fatalitiesHist
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
injuriesHist <- ggplot(data = injuries, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Injuries") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Injuries")
grid.arrange(fatalitiesHist, injuriesHist, ncol = 2)
library(gridExtra)
install.packages("gridExtra")
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
injuriesHist <- ggplot(data = injuries, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Injuries") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Injuries")
grid.arrange(fatalitiesHist, injuriesHist, ncol = 2)
library(gridExtra)
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
injuriesHist <- ggplot(data = injuries, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "blue", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Injuries") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Injuries")
grid.arrange(fatalitiesHist, injuriesHist, ncol = 2)
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "gray", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
fatalitiesHist
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "green", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
fatalitiesHist
fatalitiesHist <- ggplot(data = fatalities, aes(x = reorder(EVTYPE, rev(count)), y = count)) +
geom_bar(stat = "identity", aes(fill = count)) +
scale_fill_continuous(low = "orange", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Fatalities") +
xlab("Event") +
ggtitle("Top 10 Weather Events By Fatalities")
fatalitiesHist
propHist <- ggplot(data = costPropDamage, aes(x = reorder(EVTYPE, rev(Cost)), y = Cost)) +
geom_bar(stat = "identity", aes(fill = Cost)) +
scale_fill_continuous(low = "orange", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Cost (in billions of US dollars)") +
xlab("Type of Event") +
ggtitle("Top 10 Weather Events\n for Property Damage")
cropHist <- ggplot(data = costCropDamage, aes(x = reorder(EVTYPE, rev(Cost)), y = Cost)) +
geom_bar(stat = "identity", aes(fill = Cost)) +
scale_fill_continuous(low = "orange", high = "purple") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Cost (in billions of US dollars)") +
xlab("Type of Event") +
ggtitle("Top 10 Weather Events\n for Crop Damage")
grid.arrange(propHist, cropHist, ncol = 2)
lm()
installed.packages()
